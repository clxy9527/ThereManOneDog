<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.mapper.NoticeMapper">
	
	<parameterMap type="map" id="readers">
	<parameter property="nId"/>
	<parameter property="readers"/>
	<parameter property="nReadState"/>
	</parameterMap>
	
	<parameterMap type="map" id="readmap">
	<parameter property="nId"/>
	<parameter property="eId"/>
	<parameter property="readstate"/>
	</parameterMap>
	
	<parameterMap type="map" id="idmap">
	<parameter property="nId"/>
	<parameter property="eId"/>
	</parameterMap>
	
	
	<resultMap id="noticeMap" type="com.oa.pojo.Notice">
	    <id property="nId" column="Nid"></id>
	    <result property="nTitle" column="Ntitle"></result>
	    <result property="nContent" column="Ncontent"></result>
	    <result property="nTime" column="Ntime"></result>
	    <result property="nType" column="Ntype"></result>
	    <result property="nReadState" column="readstate"></result>
	    <result property="nImportant" column="Nimportant"></result>
	    <association property="nAuthor" javaType="com.oa.pojo.Employee">
	       <id property="eId" column="Eid"></id>
	       <result property="eName" column="Ename"></result>
	    </association>
	</resultMap> 
	
	<insert id="addNotice"  useGeneratedKeys="true" keyProperty="nId" parameterType="com.oa.pojo.Notice">
	    insert into notice values(null,#{nTitle},#{nAuthor.eId},#{nContent},#{nTime},#{nType},#{nImportant})
	</insert>
	
	<insert id="addReaders" parameterMap="readers">
	 insert into noticeemployee values
	 <foreach collection="readers" item="reader" separator="," >
	 (#{nId},#{reader.eId},#{nReadState})
	 </foreach>
	</insert>
	
	<select id="getAllNotice" resultMap="noticeMap">
	select n.Nid,n.Ntitle,n.Ncontent,n.Ntime,n.Ntype,n.Nimportant,e.Eid,e.Ename from notice n,employee e
	where  n.Nauthor=e.Eid 
	</select>
	
	<select id="getReaders" resultType="com.oa.pojo.Employee">
	     select e.Eid,e.Ename,ne.readstate from Employee e,noticeemployee ne WHERE ne.Eid = e.Eid and ne.Nid = #{value}
	</select>
	
	
	<select id="findNoticeById" resultMap="noticeMap">
	select n.Nid,n.Ntitle,n.Ncontent,n.Ntime,n.Ntype,n.Nimportant,e.Eid,e.Ename from notice n,employee e
	where  n.Nauthor=e.Eid and n.nid = #{value}
	</select>
	
    <select id="findNoticeByEmployee" resultMap="noticeMap">
select n.Nid,n.Ntitle,n.Ncontent,n.Nauthor,author.Ename,n.Ntime,n.Ntype,ne.readstate,n.Nimportant,e.Eid,e.Ename  
	from notice n,employee e ,noticeemployee ne ,employee author
	where  n.Nauthor=author.Eid and n.nid = ne.Nid and ne.Eid = e.Eid AND e.Eid= #{value}
	</select>
	
	<delete id="deleteNotices" parameterType="java.util.List">
	delete from notice where Nid in 
	<foreach collection="list" item="item" open="(" close=")" separator=",">
	    #{item}
	</foreach>
	</delete>
	
	<delete id="deleteReaders" parameterType="Integer">
	delete from noticeemployee where Nid in
	<foreach collection="list" item="item" open="(" close=")" separator=",">
	    #{item}
	</foreach>
	</delete>
	
	<update id="readNotice" parameterMap="readmap">
	    update noticeemployee set readstate = #{readstate} where Nid = #{nId} and Eid=#{eId}
	</update>
	
	<select id="findNoticeByNidAndEid" parameterMap="idmap" resultMap="noticeMap">
select n.Nid,n.Ntitle,n.Ncontent,n.Nauthor,author.Ename,n.Ntime,n.Ntype,ne.readstate,n.Nimportant,e.Eid,e.Ename  
	from notice n,employee e ,noticeemployee ne ,employee author
	where  n.Nauthor=author.Eid and n.nid = ne.Nid and ne.Eid = e.Eid AND e.Eid=#{eId} and n.Nid = #{nId}
	</select>
	
	<select id="findNoticeByEidAndState" parameterMap="readmap" resultMap="noticeMap">
	select n.Nid,n.Ntitle,n.Ncontent,n.Nauthor,author.Ename,n.Ntime,n.Ntype,ne.readstate,n.Nimportant,e.Eid,e.Ename  
	from notice n,employee e ,noticeemployee ne ,employee author
	where  n.Nauthor=author.Eid and n.nid = ne.Nid and ne.Eid = e.Eid AND e.Eid=#{eId} and ne.readstate = #{readstate}
	</select>
	
	<select id="findNoticeByType" resultMap="noticeMap">
	select n.Nid,n.Ntitle,n.Ncontent,n.Ntime,n.Ntype,n.Nimportant,e.Eid,e.Ename from notice n,employee e
	where  n.Nauthor=e.Eid and n.Ntype = #{value}
	</select>
</mapper>